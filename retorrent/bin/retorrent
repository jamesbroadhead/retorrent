#!/usr/bin/python
"""
retorrent - a media management tool

Author: James Broadhead jamesbroadhead@gmail.com
"""
from glob import glob
import logging
import os
from os.path import exists as pexists
from os.path import basename, dirname, expanduser
import sys

from os_utils.context_handlers import cd
from retorrentlib import retorrenter

from optparse import OptionParser

def main():

    options, argv = parse_args()

    if options.debug:
        logging.basicConfig(level=logging.INFO)

    # TODO : proper logging, remove the options.debug arg
    r = retorrenter.retorrenter(options.configdir, debug=options.debug)

    # get args (folders / files which are 100% downloaded.
    command_bundles = r.handle_args(argv)


    for bundle in command_bundles:
        for sub_cmd in bundle['commands']:
            os.system(sub_cmd)

        if cmd['commands']:
            r.check_symlinks(bundle)

    if command_bundles:
        os.system('symlinker')

def parse_args():
    parser = OptionParser()

    parser.add_option('-c', '--config-dir',
                    help='Specify alternate config dir',
                    dest='configdir',
                    default='')

    parser.add_option('-d', '--debug',
                    help='Print debug messages (where implemented)',
                    action='store_true',
                    dest='debug',
                    default=False)

    options, args = parser.parse_args()

    return options, args

def print_optionstructions():
    print
    print '<WORD> will remove WORD this time only'
    print '"-<WORD> will add WORD to the REMOVE_LIST'
    print '"+<WORD>" will set the dir to be WORD'
    print

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
