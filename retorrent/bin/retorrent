#!/usr/bin/python
"""
retorrent - a media management tool

Author: James Broadhead jamesbroadhead@gmail.com
"""
import logging
from optparse import OptionParser
import os

from retorrentlib.retorrenter import check_result, retorrenter


def main():

    options, argv = parse_args()

    if options.debug:
        logging.basicConfig(level=logging.INFO)

    # TODO : proper logging, remove the options.debug arg
    r = retorrenter(options.configdir, debug=options.debug)

    # get args (folders / files which are 100% downloaded.
    command_bundles = r.handle_args(argv)

    if command_bundles:
        for bundle in command_bundles:
            failed=False
            for sub_cmd in bundle['commands']:
                retval = os.system(sub_cmd)
                bundle['commands_run'].append(sub_cmd)
                if not retval == 0:
                    failed=True
                    break

            if not check_result(bundle, failed) or failed:
                break
        os.system('symlinker')

def parse_args():
    parser = OptionParser()

    parser.add_option('-c', '--config-dir',
                    help='Specify alternate config dir',
                    dest='configdir',
                    default='')

    parser.add_option('-d', '--debug',
                    help='Print debug messages (where implemented)',
                    action='store_true',
                    dest='debug',
                    default=False)

    options, args = parser.parse_args()

    return options, args

def print_optionstructions():
    print
    print '<WORD> will remove WORD this time only'
    print '"-<WORD> will add WORD to the REMOVE_LIST'
    print '"+<WORD>" will set the dir to be WORD'
    print

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
